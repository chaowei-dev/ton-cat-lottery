# 🐳 TON Cat Lottery Contracts Dockerfile
# 基於 Node.js 鏡像用於智能合約編譯和部署

# ================================
# 基礎階段
# ================================
FROM node:20-alpine AS base

# 設置工作目錄
WORKDIR /app

# 安裝系統依賴
RUN apk add --no-cache git python3 make g++ curl

# ================================
# 依賴安裝階段
# ================================
FROM base AS deps

# 複製 package 文件
COPY contracts/package*.json ./

# 安裝依賴
RUN npm ci --only=production && npm cache clean --force

# ================================
# 開發依賴階段
# ================================  
FROM base AS deps-dev

# 複製 package 文件
COPY contracts/package*.json ./

# 安裝所有依賴 (包括開發依賴)
RUN npm ci && npm cache clean --force

# ================================
# 構建階段
# ================================
FROM deps-dev AS builder

# 複製合約源代碼
COPY contracts/ ./

# 全局安裝 Tact 編譯器 (跳過 scripts 避免 husky 問題)
RUN npm install -g @tact-lang/compiler --ignore-scripts

# 編譯智能合約
RUN npm run build

# 運行測試
RUN npm test

# ================================
# 運行階段
# ================================
FROM base AS runner

# 創建非 root 用戶
RUN adduser -D -s /bin/sh contracts

# 設置工作目錄
WORKDIR /app

# 從依賴階段複製 node_modules
COPY --from=deps /app/node_modules ./node_modules

# 從構建階段複製構建產物
COPY --from=builder /app/build ./build
COPY --from=builder /app/scripts ./scripts
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/tact.config.json ./

# 複製合約源文件
COPY contracts/*.tact ./

# 更改文件擁有者
RUN chown -R contracts:contracts /app

# 切換到非 root 用戶
USER contracts

# 暴露端口 (如果需要 HTTP 服務)
EXPOSE 3000

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD test -f ./build/CatLottery_CatLottery.ts || exit 1

# 默認命令：顯示構建信息
CMD ["sh", "-c", "echo '🎯 智能合約已編譯完成' && ls -la build/ && tail -f /dev/null"]