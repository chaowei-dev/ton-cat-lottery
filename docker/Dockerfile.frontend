# 🐳 TON Cat Lottery Frontend Dockerfile
# 基於 Node.js 鏡像構建 React + Vite 前端應用

# ================================
# 基礎階段
# ================================
FROM node:22-alpine AS base

# 設置工作目錄
WORKDIR /app

# 安裝系統依賴
RUN apk add --no-cache git curl

# ================================
# 依賴安裝階段
# ================================
FROM base AS deps

# 複製 package 文件
COPY frontend/package*.json ./

# 安裝依賴
RUN npm ci --only=production && npm cache clean --force

# ================================
# 開發依賴階段
# ================================
FROM base AS deps-dev

# 複製 package 文件
COPY frontend/package*.json ./

# 安裝所有依賴 (包括開發依賴)
RUN npm ci && npm cache clean --force

# ================================
# 構建階段
# ================================
FROM deps-dev AS builder

# 複製前端源代碼
COPY frontend/ ./

# 設置環境變數
ENV NODE_ENV=production

# 構建前端應用
RUN npm run build

# ================================
# 生產階段 (使用 nginx 提供靜態文件)
# ================================
FROM nginx:alpine AS production

# 創建非 root 用戶
RUN adduser -D -s /bin/sh frontend

# 從構建階段複製靜態文件
COPY --from=builder /app/dist /usr/share/nginx/html

# 複製 nginx 配置
COPY docker/nginx/default.conf /etc/nginx/conf.d/default.conf

# 設置正確的權限
RUN chown -R frontend:frontend /usr/share/nginx/html && \
    chown -R frontend:frontend /var/cache/nginx && \
    chown -R frontend:frontend /var/run && \
    chown -R frontend:frontend /var/log/nginx

# 暴露端口
EXPOSE 80

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80/ || exit 1

# 啟動 nginx
CMD ["nginx", "-g", "daemon off;"]

# ================================
# 開發階段 (用於開發環境)
# ================================
FROM deps-dev AS development

# 複製前端源代碼
COPY frontend/ ./

# 創建非 root 用戶
RUN adduser -D -s /bin/sh frontend && \
    chown -R frontend:frontend /app

# 切換到非 root 用戶
USER frontend

# 暴露開發端口
EXPOSE 5173

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:5173/ || exit 1

# 啟動開發服務器
CMD ["npm", "run", "dev"]