name: CD

on:
  push:
    branches: [ main, feature/ssl ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

env:
  GCP_REGION: asia-east1
  GKE_CLUSTER: ton-cat-lottery-cluster
  BACKEND_IMAGE: backend
  FRONTEND_IMAGE: frontend

jobs:
  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
        service_account: 'gha-deploy@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as credential helper
      run: |
        gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.backend
        push: true
        tags: |
          ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ton-cat-lottery/${{ env.BACKEND_IMAGE }}:latest
          ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ton-cat-lottery/${{ env.BACKEND_IMAGE }}:${{ github.sha }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.frontend
        push: true
        tags: |
          ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ton-cat-lottery/${{ env.FRONTEND_IMAGE }}:latest
          ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ton-cat-lottery/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}

    - name: Verify images pushed to Artifact Registry
      run: |
        gcloud artifacts docker images list ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ton-cat-lottery --limit=10

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --region=${{ env.GCP_REGION }} --project=${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy backend to GKE
      run: |
        kubectl set image deployment/backend \
          backend=${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ton-cat-lottery/${{ env.BACKEND_IMAGE }}:${{ github.sha }} \
          -n ton-cat-lottery --record

    - name: Deploy frontend to GKE
      run: |
        kubectl set image deployment/frontend \
          frontend=${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ton-cat-lottery/${{ env.FRONTEND_IMAGE }}:${{ github.sha }} \
          -n ton-cat-lottery --record

    - name: Wait for backend rollout
      run: |
        kubectl rollout status deployment/backend -n ton-cat-lottery --timeout=300s

    - name: Wait for frontend rollout
      run: |
        kubectl rollout status deployment/frontend -n ton-cat-lottery --timeout=300s

    - name: Verify deployment
      run: |
        echo "=== Deployment Status ==="
        kubectl get deployments -n ton-cat-lottery
        echo "=== Pod Status ==="
        kubectl get pods -n ton-cat-lottery
        echo "=== Service Status ==="
        kubectl get services -n ton-cat-lottery

    - name: Health check
      run: |
        echo "Performing basic connectivity tests..."
        kubectl get pods -l app=backend -n ton-cat-lottery -o wide
        kubectl get pods -l app=frontend -n ton-cat-lottery -o wide